package com.example.myapplication.adapters

import android.view.LayoutInflater
import android.view.View
import android.view.ViewGroup
import android.widget.Button
import android.widget.TextView
import androidx.recyclerview.widget.RecyclerView
import com.example.myapplication.R
import com.example.myapplication.data.Product

class ProductCardAdapter(
    private var products: List<Product> = emptyList(),
    private val onDetailsClick: (Product) -> Unit
) : RecyclerView.Adapter<ProductCardAdapter.ViewHolder>() {

    class ViewHolder(view: View) : RecyclerView.ViewHolder(view) {
        val nameTextView: TextView = view.findViewById(R.id.productCardName)
        val caloriesTextView: TextView = view.findViewById(R.id.productCardCalories)
        val proteinTextView: TextView = view.findViewById(R.id.productCardProtein)
        val fatTextView: TextView = view.findViewById(R.id.productCardFat)
        val carbsTextView: TextView = view.findViewById(R.id.productCardCarbs)
        val tagsTextView: TextView = view.findViewById(R.id.productCardTags)
        val allergensTextView: TextView = view.findViewById(R.id.productCardAllergens)
        val detailsButton: Button = view.findViewById(R.id.cardDetailsButton)
    }

    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): ViewHolder {
        val view = LayoutInflater.from(parent.context)
            .inflate(R.layout.item_product_card, parent, false)
        return ViewHolder(view)
    }

    override fun onBindViewHolder(holder: ViewHolder, position: Int) {
        val product = products[position]
        holder.nameTextView.text = product.name
        holder.caloriesTextView.text = "–ö–∞–ª–æ—Ä–∏–∏: ${product.calories}"
        holder.proteinTextView.text = "–ë–µ–ª–∫–∏: ${product.protein}–≥"
        holder.fatTextView.text = "–ñ–∏—Ä—ã: ${product.fat}–≥"
        holder.carbsTextView.text = "–£–≥–ª–µ–≤–æ–¥—ã: ${product.carbs}–≥"
        holder.tagsTextView.text = getTagsString(product)
        holder.allergensTextView.text = getAllergensString(product)
        holder.detailsButton.setOnClickListener { onDetailsClick(product) }
    }

    override fun getItemCount() = products.size

    fun updateProducts(newProducts: List<Product>) {
        products = newProducts
        notifyDataSetChanged()
    }

    private fun getTagsString(p: Product): String {
        val tags = mutableListOf<String>()
        if (p.isProteinTag) tags.add("–ë–µ–ª–∫–æ–≤–æ–µ ü•©")
        if (p.isFastTag) tags.add("–ë—ã—Å—Ç—Ä–æ–µ ‚è±Ô∏è")
        if (p.isVeganTag) tags.add("–í–µ–≥–∞–Ω üå±")
        if (p.isVegetarianTag) tags.add("–í–µ–≥–µ—Ç–∞—Ä–∏–∞–Ω–µ—Ü ü•ó")
        if (p.isSeaTag) tags.add("–ú–æ—Ä—Å–∫–æ–µ üêü")
        if (p.isLightTag) tags.add("–õ—ë–≥–∫–æ–µ üíß")
        if (p.isBreakfastTag) tags.add("–ó–∞–≤—Ç—Ä–∞–∫ ‚òÄÔ∏è")
        if (p.isLunchTag) tags.add("–û–±–µ–¥ üç≤")
        if (p.isDinnerTag) tags.add("–£–∂–∏–Ω üåô")
        if (p.isSnackTag) tags.add("–ü–µ—Ä–µ–∫—É—Å üç™")
        if (p.isPeanutTag) tags.add("–ê—Ä–∞—Ö–∏—Å ü•ú")
        if (p.isFruitsTag) tags.add("–§—Ä—É–∫—Ç—ã üçè")
        if (p.isChocolateTag) tags.add("–®–æ–∫–æ–ª–∞–¥ üç´")
        if (p.isBerriesTag) tags.add("–Ø–≥–æ–¥—ã üçì")
        if (p.isVegetablesTag) tags.add("–û–≤–æ—â–∏ ü•¶")
        return if (tags.isNotEmpty()) "–¢–µ–≥–∏: ${tags.joinToString(", ")}" else "–¢–µ–≥–∏: –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç"
    }

    private fun getAllergensString(p: Product): String {
        val allergens = mutableListOf<String>()
        if (!p.isGlutenFree) allergens.add("–ì–ª—é—Ç–µ–Ω")
        if (!p.isLactoseFree) allergens.add("–õ–∞–∫—Ç–æ–∑–∞")
        if (!p.isNutsFree) allergens.add("–û—Ä–µ—Ö–∏")
        if (!p.isEggsFree) allergens.add("–Ø–π—Ü–∞")
        if (!p.isFishFree) allergens.add("–†—ã–±–∞")
        return if (allergens.isNotEmpty()) "–ê–ª–ª–µ—Ä–≥–µ–Ω—ã: ${allergens.joinToString(", ")}" else "–ë–µ–∑ –∞–ª–ª–µ—Ä–≥–µ–Ω–æ–≤"
    }
} 